//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("RepositoryModel", "RecognitionRequestExpectedResult", "RecognitionRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.RecognitionRequest), "ExpectedResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GlobalEnglish.Recognition.Repository.ExpectedResult))]
[assembly: EdmRelationshipAttribute("RepositoryModel", "SentenceQualityWordQuality", "SentenceQuality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.SentenceQuality), "WordQuality", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GlobalEnglish.Recognition.Repository.WordQuality))]
[assembly: EdmRelationshipAttribute("RepositoryModel", "SentenceMatchSentenceQuality", "SentenceMatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.SentenceMatch), "SentenceQuality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.SentenceQuality))]
[assembly: EdmRelationshipAttribute("RepositoryModel", "RecognitionResultSentenceMatch", "RecognitionResult", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.RecognitionResult), "SentenceMatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.SentenceMatch))]
[assembly: EdmRelationshipAttribute("RepositoryModel", "RecognitionResultAudioQuality", "RecognitionResult", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.RecognitionResult), "AudioQuality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.AudioQuality))]
[assembly: EdmRelationshipAttribute("RepositoryModel", "RecognitionAttemptRecognitionRequest", "RecognitionAttempt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.RecognitionAttempt), "RecognitionRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.RecognitionRequest))]
[assembly: EdmRelationshipAttribute("RepositoryModel", "RecognitionAttemptRecognitionResult", "RecognitionAttempt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.RecognitionAttempt), "RecognitionResult", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.RecognitionResult))]
[assembly: EdmRelationshipAttribute("RepositoryModel", "UserRecognitionAttempt", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.User), "RecognitionAttempt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GlobalEnglish.Recognition.Repository.RecognitionAttempt), true)]
[assembly: EdmRelationshipAttribute("RepositoryModel", "UserPhonemeQuality", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.User), "PhonemeQuality", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GlobalEnglish.Recognition.Repository.PhonemeQuality), true)]
[assembly: EdmRelationshipAttribute("RepositoryModel", "SentenceQualityPhonemeQuality", "SentenceQuality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GlobalEnglish.Recognition.Repository.SentenceQuality), "PhonemeQuality", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GlobalEnglish.Recognition.Repository.PhonemeQuality), true)]

#endregion

namespace GlobalEnglish.Recognition.Repository
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RepositoryModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RepositoryModelContainer object using the connection string found in the 'RepositoryModelContainer' section of the application configuration file.
        /// </summary>
        public RepositoryModelContainer() : base("name=RepositoryModelContainer", "RepositoryModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RepositoryModelContainer object.
        /// </summary>
        public RepositoryModelContainer(string connectionString) : base(connectionString, "RepositoryModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RepositoryModelContainer object.
        /// </summary>
        public RepositoryModelContainer(EntityConnection connection) : base(connection, "RepositoryModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RecognitionRequest> RecognitionRequests
        {
            get
            {
                if ((_RecognitionRequests == null))
                {
                    _RecognitionRequests = base.CreateObjectSet<RecognitionRequest>("RecognitionRequests");
                }
                return _RecognitionRequests;
            }
        }
        private ObjectSet<RecognitionRequest> _RecognitionRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExpectedResult> ExpectedResults
        {
            get
            {
                if ((_ExpectedResults == null))
                {
                    _ExpectedResults = base.CreateObjectSet<ExpectedResult>("ExpectedResults");
                }
                return _ExpectedResults;
            }
        }
        private ObjectSet<ExpectedResult> _ExpectedResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RecognitionResult> RecognitionResults
        {
            get
            {
                if ((_RecognitionResults == null))
                {
                    _RecognitionResults = base.CreateObjectSet<RecognitionResult>("RecognitionResults");
                }
                return _RecognitionResults;
            }
        }
        private ObjectSet<RecognitionResult> _RecognitionResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AudioQuality> AudioQualities
        {
            get
            {
                if ((_AudioQualities == null))
                {
                    _AudioQualities = base.CreateObjectSet<AudioQuality>("AudioQualities");
                }
                return _AudioQualities;
            }
        }
        private ObjectSet<AudioQuality> _AudioQualities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SentenceMatch> SentenceMatches
        {
            get
            {
                if ((_SentenceMatches == null))
                {
                    _SentenceMatches = base.CreateObjectSet<SentenceMatch>("SentenceMatches");
                }
                return _SentenceMatches;
            }
        }
        private ObjectSet<SentenceMatch> _SentenceMatches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SentenceQuality> SentenceQualities
        {
            get
            {
                if ((_SentenceQualities == null))
                {
                    _SentenceQualities = base.CreateObjectSet<SentenceQuality>("SentenceQualities");
                }
                return _SentenceQualities;
            }
        }
        private ObjectSet<SentenceQuality> _SentenceQualities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WordQuality> WordQualities
        {
            get
            {
                if ((_WordQualities == null))
                {
                    _WordQualities = base.CreateObjectSet<WordQuality>("WordQualities");
                }
                return _WordQualities;
            }
        }
        private ObjectSet<WordQuality> _WordQualities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RecognitionAttempt> RecognitionAttempts
        {
            get
            {
                if ((_RecognitionAttempts == null))
                {
                    _RecognitionAttempts = base.CreateObjectSet<RecognitionAttempt>("RecognitionAttempts");
                }
                return _RecognitionAttempts;
            }
        }
        private ObjectSet<RecognitionAttempt> _RecognitionAttempts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhonemeQuality> PhonemeQualities
        {
            get
            {
                if ((_PhonemeQualities == null))
                {
                    _PhonemeQualities = base.CreateObjectSet<PhonemeQuality>("PhonemeQualities");
                }
                return _PhonemeQualities;
            }
        }
        private ObjectSet<PhonemeQuality> _PhonemeQualities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RecognitionRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecognitionRequests(RecognitionRequest recognitionRequest)
        {
            base.AddObject("RecognitionRequests", recognitionRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExpectedResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExpectedResults(ExpectedResult expectedResult)
        {
            base.AddObject("ExpectedResults", expectedResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RecognitionResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecognitionResults(RecognitionResult recognitionResult)
        {
            base.AddObject("RecognitionResults", recognitionResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AudioQualities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAudioQualities(AudioQuality audioQuality)
        {
            base.AddObject("AudioQualities", audioQuality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SentenceMatches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSentenceMatches(SentenceMatch sentenceMatch)
        {
            base.AddObject("SentenceMatches", sentenceMatch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SentenceQualities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSentenceQualities(SentenceQuality sentenceQuality)
        {
            base.AddObject("SentenceQualities", sentenceQuality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WordQualities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWordQualities(WordQuality wordQuality)
        {
            base.AddObject("WordQualities", wordQuality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RecognitionAttempts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecognitionAttempts(RecognitionAttempt recognitionAttempt)
        {
            base.AddObject("RecognitionAttempts", recognitionAttempt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhonemeQualities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhonemeQualities(PhonemeQuality phonemeQuality)
        {
            base.AddObject("PhonemeQualities", phonemeQuality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="treshold">No Metadata Documentation available.</param>
        /// <param name="phonemeCount">No Metadata Documentation available.</param>
        public ObjectResult<PhonemeQuality> GetRecentPhonemes(Nullable<global::System.Int32> userId, Nullable<global::System.Int32> treshold, Nullable<global::System.Int32> phonemeCount)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("userId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("userId", typeof(global::System.Int32));
            }
    
            ObjectParameter tresholdParameter;
            if (treshold.HasValue)
            {
                tresholdParameter = new ObjectParameter("treshold", treshold);
            }
            else
            {
                tresholdParameter = new ObjectParameter("treshold", typeof(global::System.Int32));
            }
    
            ObjectParameter phonemeCountParameter;
            if (phonemeCount.HasValue)
            {
                phonemeCountParameter = new ObjectParameter("phonemeCount", phonemeCount);
            }
            else
            {
                phonemeCountParameter = new ObjectParameter("phonemeCount", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PhonemeQuality>("GetRecentPhonemes", userIdParameter, tresholdParameter, phonemeCountParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="treshold">No Metadata Documentation available.</param>
        /// <param name="phonemeCount">No Metadata Documentation available.</param>
        public ObjectResult<PhonemeQuality> GetRecentPhonemes(Nullable<global::System.Int32> userId, Nullable<global::System.Int32> treshold, Nullable<global::System.Int32> phonemeCount, MergeOption mergeOption)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("userId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("userId", typeof(global::System.Int32));
            }
    
            ObjectParameter tresholdParameter;
            if (treshold.HasValue)
            {
                tresholdParameter = new ObjectParameter("treshold", treshold);
            }
            else
            {
                tresholdParameter = new ObjectParameter("treshold", typeof(global::System.Int32));
            }
    
            ObjectParameter phonemeCountParameter;
            if (phonemeCount.HasValue)
            {
                phonemeCountParameter = new ObjectParameter("phonemeCount", phonemeCount);
            }
            else
            {
                phonemeCountParameter = new ObjectParameter("phonemeCount", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<PhonemeQuality>("GetRecentPhonemes", mergeOption, userIdParameter, tresholdParameter, phonemeCountParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepositoryModel", Name="AudioQuality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AudioQuality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AudioQuality object.
        /// </summary>
        /// <param name="level">Initial value of the Level property.</param>
        /// <param name="truncation">Initial value of the Truncation property.</param>
        /// <param name="signalNoiseRatio">Initial value of the SignalNoiseRatio property.</param>
        /// <param name="noiseLevel">Initial value of the NoiseLevel property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static AudioQuality CreateAudioQuality(global::System.Int32 level, global::System.Int32 truncation, global::System.Single signalNoiseRatio, global::System.Int32 noiseLevel, global::System.Int32 id)
        {
            AudioQuality audioQuality = new AudioQuality();
            audioQuality.Level = level;
            audioQuality.Truncation = truncation;
            audioQuality.SignalNoiseRatio = signalNoiseRatio;
            audioQuality.NoiseLevel = noiseLevel;
            audioQuality.Id = id;
            return audioQuality;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int32 _Level;
        partial void OnLevelChanging(global::System.Int32 value);
        partial void OnLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Truncation
        {
            get
            {
                return _Truncation;
            }
            set
            {
                OnTruncationChanging(value);
                ReportPropertyChanging("Truncation");
                _Truncation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Truncation");
                OnTruncationChanged();
            }
        }
        private global::System.Int32 _Truncation;
        partial void OnTruncationChanging(global::System.Int32 value);
        partial void OnTruncationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Single SignalNoiseRatio
        {
            get
            {
                return _SignalNoiseRatio;
            }
            set
            {
                OnSignalNoiseRatioChanging(value);
                ReportPropertyChanging("SignalNoiseRatio");
                _SignalNoiseRatio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SignalNoiseRatio");
                OnSignalNoiseRatioChanged();
            }
        }
        private global::System.Single _SignalNoiseRatio;
        partial void OnSignalNoiseRatioChanging(global::System.Single value);
        partial void OnSignalNoiseRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoiseLevel
        {
            get
            {
                return _NoiseLevel;
            }
            set
            {
                OnNoiseLevelChanging(value);
                ReportPropertyChanging("NoiseLevel");
                _NoiseLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoiseLevel");
                OnNoiseLevelChanged();
            }
        }
        private global::System.Int32 _NoiseLevel;
        partial void OnNoiseLevelChanging(global::System.Int32 value);
        partial void OnNoiseLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Miscellany
        {
            get
            {
                return _Miscellany;
            }
            set
            {
                OnMiscellanyChanging(value);
                ReportPropertyChanging("Miscellany");
                _Miscellany = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Miscellany");
                OnMiscellanyChanged();
            }
        }
        private global::System.String _Miscellany;
        partial void OnMiscellanyChanging(global::System.String value);
        partial void OnMiscellanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "RecognitionResultAudioQuality", "RecognitionResult")]
        public RecognitionResult RecognitionResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionResult>("RepositoryModel.RecognitionResultAudioQuality", "RecognitionResult").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionResult>("RepositoryModel.RecognitionResultAudioQuality", "RecognitionResult").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecognitionResult> RecognitionResultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionResult>("RepositoryModel.RecognitionResultAudioQuality", "RecognitionResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecognitionResult>("RepositoryModel.RecognitionResultAudioQuality", "RecognitionResult", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepositoryModel", Name="ExpectedResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExpectedResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExpectedResult object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static ExpectedResult CreateExpectedResult(global::System.Int32 id)
        {
            ExpectedResult expectedResult = new ExpectedResult();
            expectedResult.Id = id;
            return expectedResult;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private global::System.String _Answer;
        partial void OnAnswerChanging(global::System.String value);
        partial void OnAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullAnswer
        {
            get
            {
                return _FullAnswer;
            }
            set
            {
                OnFullAnswerChanging(value);
                ReportPropertyChanging("FullAnswer");
                _FullAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullAnswer");
                OnFullAnswerChanged();
            }
        }
        private global::System.String _FullAnswer;
        partial void OnFullAnswerChanging(global::System.String value);
        partial void OnFullAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "RecognitionRequestExpectedResult", "RecognitionRequest")]
        public RecognitionRequest RecognitionRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionRequest>("RepositoryModel.RecognitionRequestExpectedResult", "RecognitionRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionRequest>("RepositoryModel.RecognitionRequestExpectedResult", "RecognitionRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecognitionRequest> RecognitionRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionRequest>("RepositoryModel.RecognitionRequestExpectedResult", "RecognitionRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecognitionRequest>("RepositoryModel.RecognitionRequestExpectedResult", "RecognitionRequest", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepositoryModel", Name="PhonemeQuality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhonemeQuality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhonemeQuality object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="phoneName">Initial value of the PhoneName property.</param>
        /// <param name="grapheme">Initial value of the Grapheme property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="sentenceQualityId">Initial value of the SentenceQualityId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static PhonemeQuality CreatePhonemeQuality(global::System.Int32 id, global::System.String phoneName, global::System.String grapheme, global::System.Int32 score, global::System.Int32 userId, global::System.Int32 sentenceQualityId, global::System.DateTime createdDate)
        {
            PhonemeQuality phonemeQuality = new PhonemeQuality();
            phonemeQuality.Id = id;
            phonemeQuality.PhoneName = phoneName;
            phonemeQuality.Grapheme = grapheme;
            phonemeQuality.Score = score;
            phonemeQuality.UserId = userId;
            phonemeQuality.SentenceQualityId = sentenceQualityId;
            phonemeQuality.CreatedDate = createdDate;
            return phonemeQuality;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneName
        {
            get
            {
                return _PhoneName;
            }
            set
            {
                OnPhoneNameChanging(value);
                ReportPropertyChanging("PhoneName");
                _PhoneName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneName");
                OnPhoneNameChanged();
            }
        }
        private global::System.String _PhoneName;
        partial void OnPhoneNameChanging(global::System.String value);
        partial void OnPhoneNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Grapheme
        {
            get
            {
                return _Grapheme;
            }
            set
            {
                OnGraphemeChanging(value);
                ReportPropertyChanging("Grapheme");
                _Grapheme = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Grapheme");
                OnGraphemeChanged();
            }
        }
        private global::System.String _Grapheme;
        partial void OnGraphemeChanging(global::System.String value);
        partial void OnGraphemeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Int32 _Score;
        partial void OnScoreChanging(global::System.Int32 value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SentenceQualityId
        {
            get
            {
                return _SentenceQualityId;
            }
            set
            {
                OnSentenceQualityIdChanging(value);
                ReportPropertyChanging("SentenceQualityId");
                _SentenceQualityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentenceQualityId");
                OnSentenceQualityIdChanged();
            }
        }
        private global::System.Int32 _SentenceQualityId;
        partial void OnSentenceQualityIdChanging(global::System.Int32 value);
        partial void OnSentenceQualityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "UserPhonemeQuality", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RepositoryModel.UserPhonemeQuality", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RepositoryModel.UserPhonemeQuality", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RepositoryModel.UserPhonemeQuality", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RepositoryModel.UserPhonemeQuality", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "SentenceQualityPhonemeQuality", "SentenceQuality")]
        public SentenceQuality SentenceQuality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceQuality>("RepositoryModel.SentenceQualityPhonemeQuality", "SentenceQuality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceQuality>("RepositoryModel.SentenceQualityPhonemeQuality", "SentenceQuality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SentenceQuality> SentenceQualityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceQuality>("RepositoryModel.SentenceQualityPhonemeQuality", "SentenceQuality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SentenceQuality>("RepositoryModel.SentenceQualityPhonemeQuality", "SentenceQuality", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepositoryModel", Name="RecognitionAttempt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RecognitionAttempt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RecognitionAttempt object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="engineId">Initial value of the EngineId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static RecognitionAttempt CreateRecognitionAttempt(global::System.Int32 id, global::System.Int32 engineId, global::System.Int32 userId)
        {
            RecognitionAttempt recognitionAttempt = new RecognitionAttempt();
            recognitionAttempt.Id = id;
            recognitionAttempt.EngineId = engineId;
            recognitionAttempt.UserId = userId;
            return recognitionAttempt;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EngineId
        {
            get
            {
                return _EngineId;
            }
            set
            {
                OnEngineIdChanging(value);
                ReportPropertyChanging("EngineId");
                _EngineId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EngineId");
                OnEngineIdChanged();
            }
        }
        private global::System.Int32 _EngineId;
        partial void OnEngineIdChanging(global::System.Int32 value);
        partial void OnEngineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "RecognitionAttemptRecognitionRequest", "RecognitionRequest")]
        public RecognitionRequest RecognitionRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionRequest>("RepositoryModel.RecognitionAttemptRecognitionRequest", "RecognitionRequest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionRequest>("RepositoryModel.RecognitionAttemptRecognitionRequest", "RecognitionRequest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecognitionRequest> RecognitionRequestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionRequest>("RepositoryModel.RecognitionAttemptRecognitionRequest", "RecognitionRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecognitionRequest>("RepositoryModel.RecognitionAttemptRecognitionRequest", "RecognitionRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "RecognitionAttemptRecognitionResult", "RecognitionResult")]
        public RecognitionResult RecognitionResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionResult>("RepositoryModel.RecognitionAttemptRecognitionResult", "RecognitionResult").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionResult>("RepositoryModel.RecognitionAttemptRecognitionResult", "RecognitionResult").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecognitionResult> RecognitionResultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionResult>("RepositoryModel.RecognitionAttemptRecognitionResult", "RecognitionResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecognitionResult>("RepositoryModel.RecognitionAttemptRecognitionResult", "RecognitionResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "UserRecognitionAttempt", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RepositoryModel.UserRecognitionAttempt", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RepositoryModel.UserRecognitionAttempt", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("RepositoryModel.UserRecognitionAttempt", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("RepositoryModel.UserRecognitionAttempt", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepositoryModel", Name="RecognitionRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RecognitionRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RecognitionRequest object.
        /// </summary>
        /// <param name="recognitionType">Initial value of the RecognitionType property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static RecognitionRequest CreateRecognitionRequest(global::System.Int32 recognitionType, global::System.Int32 id)
        {
            RecognitionRequest recognitionRequest = new RecognitionRequest();
            recognitionRequest.RecognitionType = recognitionType;
            recognitionRequest.Id = id;
            return recognitionRequest;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecognitionType
        {
            get
            {
                return _RecognitionType;
            }
            set
            {
                OnRecognitionTypeChanging(value);
                ReportPropertyChanging("RecognitionType");
                _RecognitionType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecognitionType");
                OnRecognitionTypeChanged();
            }
        }
        private global::System.Int32 _RecognitionType;
        partial void OnRecognitionTypeChanging(global::System.Int32 value);
        partial void OnRecognitionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Grammar
        {
            get
            {
                return _Grammar;
            }
            set
            {
                OnGrammarChanging(value);
                ReportPropertyChanging("Grammar");
                _Grammar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Grammar");
                OnGrammarChanged();
            }
        }
        private global::System.String _Grammar;
        partial void OnGrammarChanging(global::System.String value);
        partial void OnGrammarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "RecognitionRequestExpectedResult", "ExpectedResult")]
        public EntityCollection<ExpectedResult> ExpectedResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExpectedResult>("RepositoryModel.RecognitionRequestExpectedResult", "ExpectedResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExpectedResult>("RepositoryModel.RecognitionRequestExpectedResult", "ExpectedResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "RecognitionAttemptRecognitionRequest", "RecognitionAttempt")]
        public RecognitionAttempt RecognitionAttempt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionAttempt>("RepositoryModel.RecognitionAttemptRecognitionRequest", "RecognitionAttempt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionAttempt>("RepositoryModel.RecognitionAttemptRecognitionRequest", "RecognitionAttempt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecognitionAttempt> RecognitionAttemptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionAttempt>("RepositoryModel.RecognitionAttemptRecognitionRequest", "RecognitionAttempt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecognitionAttempt>("RepositoryModel.RecognitionAttemptRecognitionRequest", "RecognitionAttempt", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepositoryModel", Name="RecognitionResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RecognitionResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RecognitionResult object.
        /// </summary>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="resultDetail">Initial value of the ResultDetail property.</param>
        /// <param name="recognitionTime">Initial value of the RecognitionTime property.</param>
        /// <param name="queuedRecognitionTime">Initial value of the QueuedRecognitionTime property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static RecognitionResult CreateRecognitionResult(global::System.Int32 type, global::System.Int32 resultDetail, global::System.Int32 recognitionTime, global::System.Int32 queuedRecognitionTime, global::System.Int32 id)
        {
            RecognitionResult recognitionResult = new RecognitionResult();
            recognitionResult.Type = type;
            recognitionResult.ResultDetail = resultDetail;
            recognitionResult.RecognitionTime = recognitionTime;
            recognitionResult.QueuedRecognitionTime = queuedRecognitionTime;
            recognitionResult.Id = id;
            return recognitionResult;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultDetail
        {
            get
            {
                return _ResultDetail;
            }
            set
            {
                OnResultDetailChanging(value);
                ReportPropertyChanging("ResultDetail");
                _ResultDetail = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultDetail");
                OnResultDetailChanged();
            }
        }
        private global::System.Int32 _ResultDetail;
        partial void OnResultDetailChanging(global::System.Int32 value);
        partial void OnResultDetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecognitionTime
        {
            get
            {
                return _RecognitionTime;
            }
            set
            {
                OnRecognitionTimeChanging(value);
                ReportPropertyChanging("RecognitionTime");
                _RecognitionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecognitionTime");
                OnRecognitionTimeChanged();
            }
        }
        private global::System.Int32 _RecognitionTime;
        partial void OnRecognitionTimeChanging(global::System.Int32 value);
        partial void OnRecognitionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QueuedRecognitionTime
        {
            get
            {
                return _QueuedRecognitionTime;
            }
            set
            {
                OnQueuedRecognitionTimeChanging(value);
                ReportPropertyChanging("QueuedRecognitionTime");
                _QueuedRecognitionTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QueuedRecognitionTime");
                OnQueuedRecognitionTimeChanged();
            }
        }
        private global::System.Int32 _QueuedRecognitionTime;
        partial void OnQueuedRecognitionTimeChanging(global::System.Int32 value);
        partial void OnQueuedRecognitionTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecordedFileName
        {
            get
            {
                return _RecordedFileName;
            }
            set
            {
                OnRecordedFileNameChanging(value);
                ReportPropertyChanging("RecordedFileName");
                _RecordedFileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecordedFileName");
                OnRecordedFileNameChanged();
            }
        }
        private global::System.String _RecordedFileName;
        partial void OnRecordedFileNameChanging(global::System.String value);
        partial void OnRecordedFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecordedFileType
        {
            get
            {
                return _RecordedFileType;
            }
            set
            {
                OnRecordedFileTypeChanging(value);
                ReportPropertyChanging("RecordedFileType");
                _RecordedFileType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecordedFileType");
                OnRecordedFileTypeChanged();
            }
        }
        private global::System.String _RecordedFileType;
        partial void OnRecordedFileTypeChanging(global::System.String value);
        partial void OnRecordedFileTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "RecognitionResultSentenceMatch", "SentenceMatch")]
        public SentenceMatch Sentence
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceMatch>("RepositoryModel.RecognitionResultSentenceMatch", "SentenceMatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceMatch>("RepositoryModel.RecognitionResultSentenceMatch", "SentenceMatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SentenceMatch> SentenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceMatch>("RepositoryModel.RecognitionResultSentenceMatch", "SentenceMatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SentenceMatch>("RepositoryModel.RecognitionResultSentenceMatch", "SentenceMatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "RecognitionResultAudioQuality", "AudioQuality")]
        public AudioQuality AudioMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AudioQuality>("RepositoryModel.RecognitionResultAudioQuality", "AudioQuality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AudioQuality>("RepositoryModel.RecognitionResultAudioQuality", "AudioQuality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AudioQuality> AudioMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AudioQuality>("RepositoryModel.RecognitionResultAudioQuality", "AudioQuality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AudioQuality>("RepositoryModel.RecognitionResultAudioQuality", "AudioQuality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "RecognitionAttemptRecognitionResult", "RecognitionAttempt")]
        public RecognitionAttempt RecognitionAttempt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionAttempt>("RepositoryModel.RecognitionAttemptRecognitionResult", "RecognitionAttempt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionAttempt>("RepositoryModel.RecognitionAttemptRecognitionResult", "RecognitionAttempt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecognitionAttempt> RecognitionAttemptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionAttempt>("RepositoryModel.RecognitionAttemptRecognitionResult", "RecognitionAttempt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecognitionAttempt>("RepositoryModel.RecognitionAttemptRecognitionResult", "RecognitionAttempt", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepositoryModel", Name="SentenceMatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SentenceMatch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SentenceMatch object.
        /// </summary>
        /// <param name="matchedIndex">Initial value of the MatchedIndex property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static SentenceMatch CreateSentenceMatch(global::System.Int32 matchedIndex, global::System.Int32 id)
        {
            SentenceMatch sentenceMatch = new SentenceMatch();
            sentenceMatch.MatchedIndex = matchedIndex;
            sentenceMatch.Id = id;
            return sentenceMatch;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecognizedText
        {
            get
            {
                return _RecognizedText;
            }
            set
            {
                OnRecognizedTextChanging(value);
                ReportPropertyChanging("RecognizedText");
                _RecognizedText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecognizedText");
                OnRecognizedTextChanged();
            }
        }
        private global::System.String _RecognizedText;
        partial void OnRecognizedTextChanging(global::System.String value);
        partial void OnRecognizedTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Interpretation
        {
            get
            {
                return _Interpretation;
            }
            set
            {
                OnInterpretationChanging(value);
                ReportPropertyChanging("Interpretation");
                _Interpretation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Interpretation");
                OnInterpretationChanged();
            }
        }
        private global::System.String _Interpretation;
        partial void OnInterpretationChanging(global::System.String value);
        partial void OnInterpretationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MatchedIndex
        {
            get
            {
                return _MatchedIndex;
            }
            set
            {
                OnMatchedIndexChanging(value);
                ReportPropertyChanging("MatchedIndex");
                _MatchedIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MatchedIndex");
                OnMatchedIndexChanged();
            }
        }
        private global::System.Int32 _MatchedIndex;
        partial void OnMatchedIndexChanging(global::System.Int32 value);
        partial void OnMatchedIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "SentenceMatchSentenceQuality", "SentenceQuality")]
        public SentenceQuality Quality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceQuality>("RepositoryModel.SentenceMatchSentenceQuality", "SentenceQuality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceQuality>("RepositoryModel.SentenceMatchSentenceQuality", "SentenceQuality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SentenceQuality> QualityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceQuality>("RepositoryModel.SentenceMatchSentenceQuality", "SentenceQuality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SentenceQuality>("RepositoryModel.SentenceMatchSentenceQuality", "SentenceQuality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "RecognitionResultSentenceMatch", "RecognitionResult")]
        public RecognitionResult RecognitionResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionResult>("RepositoryModel.RecognitionResultSentenceMatch", "RecognitionResult").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionResult>("RepositoryModel.RecognitionResultSentenceMatch", "RecognitionResult").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecognitionResult> RecognitionResultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecognitionResult>("RepositoryModel.RecognitionResultSentenceMatch", "RecognitionResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecognitionResult>("RepositoryModel.RecognitionResultSentenceMatch", "RecognitionResult", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepositoryModel", Name="SentenceQuality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SentenceQuality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SentenceQuality object.
        /// </summary>
        /// <param name="frameCount">Initial value of the FrameCount property.</param>
        /// <param name="confidence">Initial value of the Confidence property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        /// <param name="phraseConfidence">Initial value of the PhraseConfidence property.</param>
        /// <param name="phraseAcceptanceThreshold">Initial value of the PhraseAcceptanceThreshold property.</param>
        /// <param name="sentenceAcceptanceThreshold">Initial value of the SentenceAcceptanceThreshold property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static SentenceQuality CreateSentenceQuality(global::System.Int32 frameCount, global::System.Int32 confidence, global::System.Int32 score, global::System.Int32 phraseConfidence, global::System.Int32 phraseAcceptanceThreshold, global::System.Int32 sentenceAcceptanceThreshold, global::System.Int32 id)
        {
            SentenceQuality sentenceQuality = new SentenceQuality();
            sentenceQuality.FrameCount = frameCount;
            sentenceQuality.Confidence = confidence;
            sentenceQuality.Score = score;
            sentenceQuality.PhraseConfidence = phraseConfidence;
            sentenceQuality.PhraseAcceptanceThreshold = phraseAcceptanceThreshold;
            sentenceQuality.SentenceAcceptanceThreshold = sentenceAcceptanceThreshold;
            sentenceQuality.Id = id;
            return sentenceQuality;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FrameCount
        {
            get
            {
                return _FrameCount;
            }
            set
            {
                OnFrameCountChanging(value);
                ReportPropertyChanging("FrameCount");
                _FrameCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FrameCount");
                OnFrameCountChanged();
            }
        }
        private global::System.Int32 _FrameCount;
        partial void OnFrameCountChanging(global::System.Int32 value);
        partial void OnFrameCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Confidence
        {
            get
            {
                return _Confidence;
            }
            set
            {
                OnConfidenceChanging(value);
                ReportPropertyChanging("Confidence");
                _Confidence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Confidence");
                OnConfidenceChanged();
            }
        }
        private global::System.Int32 _Confidence;
        partial void OnConfidenceChanging(global::System.Int32 value);
        partial void OnConfidenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Int32 _Score;
        partial void OnScoreChanging(global::System.Int32 value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhraseConfidence
        {
            get
            {
                return _PhraseConfidence;
            }
            set
            {
                OnPhraseConfidenceChanging(value);
                ReportPropertyChanging("PhraseConfidence");
                _PhraseConfidence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhraseConfidence");
                OnPhraseConfidenceChanged();
            }
        }
        private global::System.Int32 _PhraseConfidence;
        partial void OnPhraseConfidenceChanging(global::System.Int32 value);
        partial void OnPhraseConfidenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhraseAcceptanceThreshold
        {
            get
            {
                return _PhraseAcceptanceThreshold;
            }
            set
            {
                OnPhraseAcceptanceThresholdChanging(value);
                ReportPropertyChanging("PhraseAcceptanceThreshold");
                _PhraseAcceptanceThreshold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhraseAcceptanceThreshold");
                OnPhraseAcceptanceThresholdChanged();
            }
        }
        private global::System.Int32 _PhraseAcceptanceThreshold;
        partial void OnPhraseAcceptanceThresholdChanging(global::System.Int32 value);
        partial void OnPhraseAcceptanceThresholdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SentenceAcceptanceThreshold
        {
            get
            {
                return _SentenceAcceptanceThreshold;
            }
            set
            {
                OnSentenceAcceptanceThresholdChanging(value);
                ReportPropertyChanging("SentenceAcceptanceThreshold");
                _SentenceAcceptanceThreshold = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentenceAcceptanceThreshold");
                OnSentenceAcceptanceThresholdChanged();
            }
        }
        private global::System.Int32 _SentenceAcceptanceThreshold;
        partial void OnSentenceAcceptanceThresholdChanging(global::System.Int32 value);
        partial void OnSentenceAcceptanceThresholdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "SentenceQualityWordQuality", "WordQuality")]
        public EntityCollection<WordQuality> Words
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WordQuality>("RepositoryModel.SentenceQualityWordQuality", "WordQuality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WordQuality>("RepositoryModel.SentenceQualityWordQuality", "WordQuality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "SentenceMatchSentenceQuality", "SentenceMatch")]
        public SentenceMatch SentenceMatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceMatch>("RepositoryModel.SentenceMatchSentenceQuality", "SentenceMatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceMatch>("RepositoryModel.SentenceMatchSentenceQuality", "SentenceMatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SentenceMatch> SentenceMatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceMatch>("RepositoryModel.SentenceMatchSentenceQuality", "SentenceMatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SentenceMatch>("RepositoryModel.SentenceMatchSentenceQuality", "SentenceMatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "SentenceQualityPhonemeQuality", "PhonemeQuality")]
        public EntityCollection<PhonemeQuality> PhonemeQualities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhonemeQuality>("RepositoryModel.SentenceQualityPhonemeQuality", "PhonemeQuality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhonemeQuality>("RepositoryModel.SentenceQualityPhonemeQuality", "PhonemeQuality", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepositoryModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="clsUserId">Initial value of the ClsUserId property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String clsUserId)
        {
            User user = new User();
            user.Id = id;
            user.ClsUserId = clsUserId;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClsUserId
        {
            get
            {
                return _ClsUserId;
            }
            set
            {
                OnClsUserIdChanging(value);
                ReportPropertyChanging("ClsUserId");
                _ClsUserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClsUserId");
                OnClsUserIdChanged();
            }
        }
        private global::System.String _ClsUserId;
        partial void OnClsUserIdChanging(global::System.String value);
        partial void OnClsUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "UserRecognitionAttempt", "RecognitionAttempt")]
        public EntityCollection<RecognitionAttempt> RecognitionAttempts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecognitionAttempt>("RepositoryModel.UserRecognitionAttempt", "RecognitionAttempt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecognitionAttempt>("RepositoryModel.UserRecognitionAttempt", "RecognitionAttempt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "UserPhonemeQuality", "PhonemeQuality")]
        public EntityCollection<PhonemeQuality> PhonemeQualities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhonemeQuality>("RepositoryModel.UserPhonemeQuality", "PhonemeQuality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhonemeQuality>("RepositoryModel.UserPhonemeQuality", "PhonemeQuality", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="RepositoryModel", Name="WordQuality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WordQuality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WordQuality object.
        /// </summary>
        /// <param name="phoneCount">Initial value of the PhoneCount property.</param>
        /// <param name="startFrame">Initial value of the StartFrame property.</param>
        /// <param name="endFrame">Initial value of the EndFrame property.</param>
        /// <param name="frameCount">Initial value of the FrameCount property.</param>
        /// <param name="confidence">Initial value of the Confidence property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        /// <param name="accepted">Initial value of the Accepted property.</param>
        /// <param name="id">Initial value of the Id property.</param>
        public static WordQuality CreateWordQuality(global::System.Int32 phoneCount, global::System.Int32 startFrame, global::System.Int32 endFrame, global::System.Int32 frameCount, global::System.Int32 confidence, global::System.Int32 score, global::System.Boolean accepted, global::System.Int32 id)
        {
            WordQuality wordQuality = new WordQuality();
            wordQuality.PhoneCount = phoneCount;
            wordQuality.StartFrame = startFrame;
            wordQuality.EndFrame = endFrame;
            wordQuality.FrameCount = frameCount;
            wordQuality.Confidence = confidence;
            wordQuality.Score = score;
            wordQuality.Accepted = accepted;
            wordQuality.Id = id;
            return wordQuality;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhoneCount
        {
            get
            {
                return _PhoneCount;
            }
            set
            {
                OnPhoneCountChanging(value);
                ReportPropertyChanging("PhoneCount");
                _PhoneCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhoneCount");
                OnPhoneCountChanged();
            }
        }
        private global::System.Int32 _PhoneCount;
        partial void OnPhoneCountChanging(global::System.Int32 value);
        partial void OnPhoneCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StartFrame
        {
            get
            {
                return _StartFrame;
            }
            set
            {
                OnStartFrameChanging(value);
                ReportPropertyChanging("StartFrame");
                _StartFrame = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartFrame");
                OnStartFrameChanged();
            }
        }
        private global::System.Int32 _StartFrame;
        partial void OnStartFrameChanging(global::System.Int32 value);
        partial void OnStartFrameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EndFrame
        {
            get
            {
                return _EndFrame;
            }
            set
            {
                OnEndFrameChanging(value);
                ReportPropertyChanging("EndFrame");
                _EndFrame = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndFrame");
                OnEndFrameChanged();
            }
        }
        private global::System.Int32 _EndFrame;
        partial void OnEndFrameChanging(global::System.Int32 value);
        partial void OnEndFrameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FrameCount
        {
            get
            {
                return _FrameCount;
            }
            set
            {
                OnFrameCountChanging(value);
                ReportPropertyChanging("FrameCount");
                _FrameCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FrameCount");
                OnFrameCountChanged();
            }
        }
        private global::System.Int32 _FrameCount;
        partial void OnFrameCountChanging(global::System.Int32 value);
        partial void OnFrameCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Confidence
        {
            get
            {
                return _Confidence;
            }
            set
            {
                OnConfidenceChanging(value);
                ReportPropertyChanging("Confidence");
                _Confidence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Confidence");
                OnConfidenceChanged();
            }
        }
        private global::System.Int32 _Confidence;
        partial void OnConfidenceChanging(global::System.Int32 value);
        partial void OnConfidenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Int32 _Score;
        partial void OnScoreChanging(global::System.Int32 value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Accepted
        {
            get
            {
                return _Accepted;
            }
            set
            {
                OnAcceptedChanging(value);
                ReportPropertyChanging("Accepted");
                _Accepted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Accepted");
                OnAcceptedChanged();
            }
        }
        private global::System.Boolean _Accepted;
        partial void OnAcceptedChanging(global::System.Boolean value);
        partial void OnAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("RepositoryModel", "SentenceQualityWordQuality", "SentenceQuality")]
        public SentenceQuality SentenceQuality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceQuality>("RepositoryModel.SentenceQualityWordQuality", "SentenceQuality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceQuality>("RepositoryModel.SentenceQualityWordQuality", "SentenceQuality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SentenceQuality> SentenceQualityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SentenceQuality>("RepositoryModel.SentenceQualityWordQuality", "SentenceQuality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SentenceQuality>("RepositoryModel.SentenceQualityWordQuality", "SentenceQuality", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
